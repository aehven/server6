type Audit {
  comment: String
  createdAt: ISO8601DateTime
  event: String!
  id: ID!
  itemId: Int!
  itemString: String
  itemSubtype: String
  itemType: String!
  jsonChangeset: String
  object: String
  objectChanges: String
  performedBy: String
  performedById: Int
  whodunnit: String
}

type AuthenticationResponse {
  jwt: String!

  """
  Server-side settings of interest to the client
  """
  server: String
  user: User!
}

type Cte {
  createdAt: ISO8601DateTime!
  encryptionKey: String
  id: ID!
  lastDatasetNumber: Int
  name: String
  radioId: Int
  serialNumber: String
  updatedAt: ISO8601DateTime!
}

type CteData {
  content: String
  createdAt: ISO8601DateTime!
  cteId: Int
  datasetNumber: Int
  fileName: String
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CteDataMutation
"""
input CteDataMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  cteId: ID!
  datasetNumber: Int!
  fileName: String!
}

type CteDex {
  content: String
  createdAt: ISO8601DateTime!
  cteId: Int
  fileName: String
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CteDexMutation
"""
input CteDexMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  cteId: ID!
  fileName: String!
}

type CteLog {
  content: String
  createdAt: ISO8601DateTime!
  cteId: Int
  fileName: String
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CteLogMutation
"""
input CteLogMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  cteId: ID!
  fileName: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  cteData(input: CteDataMutationInput!): CteData
  cteDex(input: CteDexMutationInput!): CteDex
  cteLog(input: CteLogMutationInput!): CteLog
  test(input: TestMutationInput!): Test
  testPlan(input: TestPlanMutationInput!): TestPlan
  user(input: UserMutationInput!): User
  userAuthenticate(input: UserAuthenticateInput!): AuthenticationResponse
}

type Notification {
  action: String
  createdAt: ISO8601DateTime!
  duration: Int
  email: Boolean
  expiresAt: ISO8601DateTime
  href: String
  id: ID!
  inApp: Boolean
  level: String
  sms: Boolean
  text: String
  title: String
  updatedAt: ISO8601DateTime!
}

type Organization {
  active: Boolean
  address1: String
  address2: String
  childrenCount: Int!
  city: String
  country: String
  createdAt: ISO8601DateTime!
  depth: Int!
  email1: String
  email2: String
  email3: String
  id: ID!
  kind: String
  level: Int
  lft: Int!
  name: String
  parentId: Int
  patients: [Patient!]
  phone1: String
  phone2: String
  phone3: String
  rgt: Int!
  state: String
  updatedAt: ISO8601DateTime!
  users: [User!]
  zip: String
}

type Patient {
  address1: String
  address2: String
  city: String
  country: String
  ctes: [Cte!]
  dob: ISO8601DateTime
  doctors: [User!]
  email: String
  firstName: String
  fullName: String
  id: ID!
  lastName: String
  phone: String
  state: String
  surgeryDate: ISO8601DateTime
  users: [User!]
  zip: String
}

type Query {
  """
  Returns a list of all audit records
  """
  audits(page: Int, perPage: Int, searchTerm: String): [Audit!]!

  """
  Get one CteData.
  """
  cteData(id: ID!): CteData!

  """
  Returns a list of all cte data
  """
  cteDatas(cteId: Int!, page: Int, perPage: Int): [CteData!]!

  """
  Returns a list of all notifications
  """
  notifications(page: Int, perPage: Int, searchTerm: String): [Notification!]!

  """
  Get one organization.
  """
  organization(id: ID!): Organization!

  """
  Returns a list of all organizations
  """
  organizations(kind: String, organizationId: Int, page: Int, perPage: Int, searchTerm: String): [Organization!]!

  """
  Get one patient.
  """
  patient(id: ID!): Patient!

  """
  Returns a list of all patients
  """
  patients(organizationId: Int, page: Int, perPage: Int, searchTerm: String): [Patient!]!

  """
  Get one test.
  """
  test(id: ID!): Test!

  """
  Get one test plan.
  """
  testPlan(id: ID!): TestPlan!

  """
  Returns a list of all test plans
  """
  testPlans(page: Int, perPage: Int, searchTerm: String): [TestPlan!]!

  """
  Get one test-plans-test.
  """
  testPlansTest(id: ID!): TestPlansTest!

  """
  Returns a list of all test-plans-tests
  """
  testPlansTests(page: Int, perPage: Int, searchTerm: String): [TestPlansTest!]!

  """
  Returns a list of all tests
  """
  tests(page: Int, perPage: Int, searchTerm: String): [Test!]!

  """
  Get one user.
  """
  user(id: ID!): User!

  """
  Returns a list of all users
  """
  users(organizationId: Int, page: Int, perPage: Int, searchTerm: String): [User!]!
}

type Test {
  id: ID!
  name: String!
}

"""
Autogenerated input type of TestMutation
"""
input TestMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID
  name: String!
}

type TestPlan {
  id: ID!
  name: String!
  testPlansTests: [TestPlansTest!]!
}

"""
Autogenerated input type of TestPlanMutation
"""
input TestPlanMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID
  name: String!
  tests: [TestPlanTestInput!]
}

input TestPlanTestInput {
  duration: Int!
  highRes: Boolean!
  testId: ID!
}

type TestPlansTest {
  duration: Int!
  highRes: Boolean!
  id: ID!
  test: Test!
  testPlan: TestPlan!
}

type User {
  createdAt: ISO8601DateTime!
  currentSignInAt: ISO8601DateTime
  currentSignInIp: String
  email: String
  firstName: String
  fullName: String!
  id: ID!
  image: String
  lastName: String
  lastSignInAt: ISO8601DateTime
  lastSignInIp: String
  nickname: String
  organizationNameWithAncestors: String
  organizations: [Organization!]
  passwordDigest: String!
  passwordExpiresAt: ISO8601DateTime
  permissions: String!
  resetPasswordSentAt: ISO8601DateTime
  resetPasswordToken: String
  role: String
  signInCount: Int!
  tacAgreedAt: ISO8601DateTime
  unsubscribeToken: String
  unsubscribedAt: ISO8601DateTime
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of UserAuthenticate
"""
input UserAuthenticateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated input type of UserMutation
"""
input UserMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Must be included for new user creation.
  """
  email: String

  """
  Must be included for new user creation.
  """
  firstName: String

  """
  Must be included if updating an existing user; omit for creating a user.
  """
  id: ID

  """
  Must be included for new user creation.
  """
  lastName: String
  organizationId: ID

  """
  Must be included for new user creation.
  """
  password: String

  """
  Must be included for new user creation.
  """
  role: String
}